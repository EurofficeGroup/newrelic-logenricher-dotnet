trigger:
  - master

pool:
  vmImage: 'windows-latest'

steps:
- script: dotnet build NewRelic.Logging.sln --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test src/Serilog/NewRelic.Logging.Serilog.Tests/NewRelic.Logging.Serilog.Tests.csproj --logger trx
  displayName: 'Run some tests'
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

# Copy files
# Copy files from a source folder to a target folder using patterns matching file paths (not folder paths)
- task: CopyFiles@2
  inputs:
    #sourceFolder: # Optional
    contents: 'src/Serilog/NewRelic.Logging.Serilog/**/*.nupkg' 
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    #cleanTargetFolder: false # Optional
    #overWrite: false # Optional
    flattenFolders: true # Optional
    #preserveTimestamp: false # Optional


# Publish build artifacts
# Publish build artifacts to Azure Pipelines or a Windows file share
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'lic-drop' 
    #publishLocation: 'Container' # Options: container, filePath
    #targetPath: # Required when publishLocation == FilePath
    #parallel: false # Optional
    #parallelCount: # Optional
    #fileCopyOptions: #Optional

- task: NuGetCommand@2
  condition: and(succeeded(), eq(variables['doNugetPush'], 'true'))
  displayName: 'Push NuGet Package'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet'
